/*
 * Copyright 2022 Sutou Kouhei <kou@clear-code.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#include <glib.h>

/**
 * SECTION: version
 * @section_id: version-macros
 * @title: Version related macros
 * @include: datafusion-glib/datafusion-glib.h
 *
 * DataFusion GLib provides macros that can be used by C pre-processor.
 * They are useful to check version related things at compile time.
 */

/**
 * GDF_VERSION_MAJOR:
 *
 * The major version.
 *
 * Since: 10.0.0
 */
#define GDF_VERSION_MAJOR (@GDF_VERSION_MAJOR@)

/**
 * GDF_VERSION_MINOR:
 *
 * The minor version.
 *
 * Since: 10.0.0
 */
#define GDF_VERSION_MINOR (@GDF_VERSION_MINOR@)

/**
 * GDF_VERSION_MICRO:
 *
 * The micro version.
 *
 * Since: 10.0.0
 */
#define GDF_VERSION_MICRO (@GDF_VERSION_MICRO@)

/**
 * GDF_VERSION_CHECK:
 * @major: A major version to check for.
 * @minor: A minor version to check for.
 * @micro: A micro version to check for.
 *
 * You can use this macro in C pre-processor.
 *
 * Returns: %TRUE if the compile time DataFusion GLib version is the
 *   same as or newer than the passed version, %FALSE otherwise.
 *
 * Since: 10.0.0
 */
#define GDF_VERSION_CHECK(major, minor, micro)          \
  (GDF_VERSION_MAJOR > (major) ||                       \
   (GDF_VERSION_MAJOR == (major) &&                     \
    GDF_VERSION_MINOR > (minor)) ||                     \
   (GDF_VERSION_MAJOR == (major) &&                     \
    GDF_VERSION_MINOR == (minor) &&                     \
    GDF_VERSION_MICRO >= (micro)))

/**
 * GDF_DISABLE_DEPRECATION_WARNINGS:
 *
 * If this macro is defined, no deprecated warnings are produced.
 *
 * You must define this macro before including the
 * arrow-glib/arrow-glib.h header.
 *
 * Since: 10.0.0
 */

#ifdef GDF_DISABLE_DEPRECATION_WARNINGS
#  define GDF_DEPRECATED
#  define GDF_DEPRECATED_FOR(function)
#  define GDF_UNAVAILABLE(major, minor)
#else
#  define GDF_DEPRECATED G_DEPRECATED
#  define GDF_DEPRECATED_FOR(function) G_DEPRECATED_FOR(function)
#  define GDF_UNAVAILABLE(major, minor) G_UNAVAILABLE(major, minor)
#endif

/**
 * GDF_VERSION_10_0:
 *
 * You can use this macro value for compile time API version check.
 *
 * Since: 10.0.0
 */
#define GDF_VERSION_10_0 G_ENCODE_VERSION(8, 0)

/**
 * GDF_VERSION_MIN_REQUIRED:
 *
 * You can use this macro for compile time API version check.
 *
 * This macro value must be one of the predefined version macros such
 * as %GDF_VERSION_10_0.
 *
 * If you use any functions that is defined by newer version than
 * %GDF_VERSION_MIN_REQUIRED, deprecated warnings are produced at
 * compile time.
 *
 * You must define this macro before including the
 * datafusion-glib/datafusion-glib.h header.
 *
 * Since: 10.0.0
 */
#ifndef GDF_VERSION_MIN_REQUIRED
#  define GDF_VERSION_MIN_REQUIRED                              \
  G_ENCODE_VERSION(GDF_VERSION_MAJOR, GDF_VERSION_MINOR)
#endif

/**
 * GDF_VERSION_MAX_ALLOWED:
 *
 * You can use this macro for compile time API version check.
 *
 * This macro value must be one of the predefined version macros such
 * as %GDF_VERSION_10_0.
 *
 * If you use any functions that is defined by newer version than
 * %GDF_VERSION_MAX_ALLOWED, deprecated warnings are produced at
 * compile time.
 *
 * You must define this macro before including the
 * datafusion-glib/datafusion-glib.h header.
 *
 * Since: 10.0.0
 */
#ifndef GDF_VERSION_MAX_ALLOWED
#  define GDF_VERSION_MAX_ALLOWED                               \
  G_ENCODE_VERSION(GDF_VERSION_MAJOR, GDF_VERSION_MINOR)
#endif


#define GDF_AVAILABLE_IN_ALL

#if GDF_VERSION_MIN_REQUIRED >= GDF_VERSION_10_0
#  define GDF_DEPRECATED_IN_10_0                GDF_DEPRECATED
#  define GDF_DEPRECATED_IN_10_0_FOR(function)  GDF_DEPRECATED_FOR(function)
#else
#  define GDF_DEPRECATED_IN_10_0
#  define GDF_DEPRECATED_IN_10_0_FOR(function)
#endif

#if GDF_VERSION_MAX_ALLOWED < GDF_VERSION_10_0
#  define GDF_AVAILABLE_IN_10_0 GDF_UNAVAILABLE(8, 0)
#else
#  define GDF_AVAILABLE_IN_10_0
#endif
